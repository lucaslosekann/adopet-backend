// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid(2))
  email     String   @unique
  name      String
  password  String
  address   Address  @relation(fields: [addressId], references: [id])
  addressId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Ong       Ong?
}

model Ong {
  id        String   @id @default(cuid(2))
  phone     String
  cnpj      String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Pets      Pet[]
}

model Address {
  id           String   @id @default(cuid(2))
  street       String
  number       String
  neighborhood String
  city         String
  uf           String
  postalCode   String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  User         User[]
}

model Pet {
  id          String   @id @default(cuid(2))
  formerName  String
  dateOfBirth DateTime
  weight      Float
  species     Specie   @relation(fields: [speciesName], references: [name])
  speciesName String
  breed       Breed    @relation(fields: [breedName], references: [name])
  breedName   String
  castrated   Boolean
  ong         Ong      @relation(fields: [ongId], references: [id])
  ongId       String
  available   Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Specie {
  name String @id
  Pet  Pet[]
}

model Breed {
  name String @id
  Pet  Pet[]
}
